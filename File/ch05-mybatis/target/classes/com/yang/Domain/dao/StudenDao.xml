<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.Domain.dao.StudneDao">
    <!--   <typeAlias 返回类型 使用自定义别名 -->
    <select id="selectStudne" resultType="student">
        select * from  student where id = #{id}
    </select>

    <!-- package 返回类型自定义 -->
    <select id="selectStudne2"  resultType="student">
        select * from  student where id = #{myid} or name = #{myname}
    </select>

    <!-- 返回的是 简单类型 -->
    <select id="contStudent" resultType="int">
        select count(*) from student
    </select>

    <!-- 返回值 是 map-->
    <select id="selctmapstudent" resultType="java.util.Map">
        select id,name from student where id= #{myid}
    </select>

    <!--
        resultMap
            先定义resultMap
            然后在select标签中，使用resultMap来引用定义
    -->

    <!--
        自定义resultmap：当列名和java属性名不一样时  使用这个
            id：自定义名称，来表示你这个resultmap
            type：Java类型的全限定名称
    -->
    <resultMap id="studentmap" type="com.yang.Domain.student">
        <!--
            类名和java属性的关系
            主键列，使用id标签:
                column:列名
                property：java类型的属性名
        -->
        <id column="id" property="id"/>
        <!--非主键列-->
        <result column="name" property="name"/>
    </resultMap>
    <select id="seletresultmap" resultMap="">
        select * from  student
    </select>

    <!--类名和属性名不一样时  第二种方法
        resultType:默认原则是 同名的列赋值给同名的属性，使用列别名(把列名转化为java对象属性名)

    -->

    <select id="seletresultmap2" resultType="com.yang.Domain.student">
        select id as stid , name as stname ,email as stemail , age as stage from  student
    </select>


    <!--   第一种 模糊查询 java对象中 指定like的内容-->
    <select id="seletresultmap3" resultType="com.yang.Domain.student">
        select * from  student where name like #{name1}
    </select>

    <!--   第二种 模糊查询 在mapper中拼接 like-->
    <select id="seletresultmap4" resultType="com.yang.Domain.student">
        select * from  student where name like "%"#{name}"%"
    </select>
</mapper>
